name: Solution Package Validations

on: 
  pull_request:
    branches:
      - master
    paths:
      - 'Solutions/**/Package/mainTemplate.json'
      - 'Solutions/**/Package/createUiDefinition.json'

    # Allows to run workflow manually from the Actions tab
    workflow_dispatch:
jobs:
  Run-SolutionPackage-Validation:
    name: Solution Package UI Testing - Testim.io
    runs-on: ubuntu-latest
    steps:
      - name: Chekout pull request braanch
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
            fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Setup git config
        run: |
              git config --local user.name "github-actions[bot]"
              git config --local user.email "<>"
      - name: Setup Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        run: |
          python -m pip install --upgrade pip
          pip install python-dotenv
          pip install requests
      - name: Run Solution Package Validation Test
        run: |
          filePath = ".script/tests/solutionPackageValidation/solutionPackageUIValidatoin.py"
          url = "https://raw.githubusercontent.com/Tintintani/Solution-Validation/master/.script/tests/solutionPackageValidation/solutionPackageUIValidation.py"/
          # Check if file exists and delete if it does
          if [ -f "$filePath" ]; then
            rm -f "$filePath"
          fi
          # Download the file
          echo "Downloading script from the master: $url"
          curl -o "$filePath" "$url"
          # Execute the script
          python "$filePath" 
        
        
        
        
        
        run: |
          if ! git remote | grep -q origin; then
            echo "Remote 'origin' not found. Adding it..."
            git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Tintintani/Solution-Validation.git
          else
            echo "Remote 'origin' already exists."
          fi

      - name: Get Modified Files
        run: |
          git fetch origin
          git diff --name-only origin/master ${{ github.events.pull_request.head.sha }} > changedFiles.txt
          ls
      
      - name: Install dependencies
        run: |
              python -m pip install --upgrade pip
              pip install python-dotenv
      - name: Run Script
        run: |
          python run.py  
